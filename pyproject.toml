[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "project-adriane"
version = "0.1.0"
description = "My FastAPI service"
authors = ["Project Adriane Team"]
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = ">=0.104.1"
uvicorn = { version = ">=0.24.0", extras = ["standard"] }
pydantic = ">=2.5.0"
pydantic-settings = ">=2.1.0"
psycopg2-binary = ">=2.9.9"
python-dotenv = ">=1.0.0"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=4.3.0"
ruff = ">=0.3.0"
bandit = ">=1.7.5"
pytest = ">=7.0.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=5.0.0"
httpx = ">=0.25.0"

# ---------------------------
# Ruff (formatter + linter)
# ---------------------------
[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".mypy_cache",
    ".nox", ".pants.d", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
    "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules", "venv"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
  "E", "F", "I", "W", "B", "C4", "UP", "N", "ARG", "PIE", "T20", "SIM", "TCH", "Q",
  "RSE", "RET", "SLF", "SLOT", "TID", "INT", "PTH", "ERA", "PD", "PGH", "PL", "TRY",
  "NPY", "AIR", "PERF", "LOG", "RUF"
]
ignore = [
  "E501",      # line too long (formatter handles wrapping)
  "B008",      # function calls in defaults
  "C901",      # too complex
  "PLR0913",   # too many arguments
  "PLR0912",   # too many branches
  "PLR0915",   # too many statements
  "PLR0911",   # too many returns
  "N999",      # invalid module name
  "TRY003",    # long messages outside exception class
  "PLW0603",   # global statement discouraged
  "TRY400",    # prefer logging.exception
  "TRY002",    # create own exception
  "SIM105",    # use contextlib.suppress
  "T201"       # print found
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR0915", "PLR0913", "PLR0912", "PLR2004"]

# ---------------------------
# Bandit
# ---------------------------
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

# ---------------------------
# Pytest
# ---------------------------
[tool.pytest.ini_options]
testpaths = ["app/test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=app --cov-report=term-missing"
